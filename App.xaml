<Application x:Class="PokerTracker3000.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:PokerTracker3000.WpfComponents.Converters"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             StartupUri="MainWindow.xaml">

    <Application.Resources>

        <FontFamily x:Key="CascadiaCode">pack://application:,,,/Resources/Fonts/#Cascadia Code</FontFamily>
        <FontFamily x:Key="Lato">pack://application:,,,/Resources/Fonts/#Lato</FontFamily>

        <BitmapImage x:Key="pokerTableOld" UriSource="/PokerTracker3000;component/Resources/Images/poker_table.png"/>
        <BitmapImage x:Key="pokerTable" UriSource="/PokerTracker3000;component/Resources/Images/poker_table_2.png"/>
        <BitmapImage x:Key="coffeeMug" UriSource="/PokerTracker3000;component/Resources/Images/coffee_mug.png"/>
        <BitmapImage x:Key="chipleadHat" UriSource="/PokerTracker3000;component/Resources/Images/hat_chiplead.png"/>

        <!-- Converters -->
        <converters:BooleanToVisibleOrCollapsedConverter x:Key="booleanToVisibleOrCollapsedConverter" />
        <converters:ScaleNumberConverter x:Key="scaleNumberConverter" />
        <converters:IsNullConverter x:Key="isNullConverter" />
        <converters:ValueDisplayConverter x:Key="valueDisplayConverter" />
        <converters:SecondsToTimeStringConverter x:Key="secondsToTimeStringConverter" />
        <converters:SecondsToTimestampConverter x:Key="secondsToTimestampConverter" />
        <converters:EmptyImageConverter x:Key="emptyImageConverter" />

        <!-- Animation -->
        <Storyboard x:Key="animateOpacityToOne"
                    PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <LinearDoubleKeyFrame KeyTime="00:00:0.3" Value="1.0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="animateOpacityToPointSix"
                    PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <LinearDoubleKeyFrame KeyTime="00:00:0.3" Value="0.6" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="animateOpacityToZero"
            PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <LinearDoubleKeyFrame KeyTime="00:00:0.3" Value="0.0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="scaleUp"
            PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame Value="1.2"
                              KeyTime="0:0:0.3">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame Value="1.2"
                   KeyTime="0:0:0.3">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="scaleDown"
     PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame Value="1.0"
                    KeyTime="0:0:0.3">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame Value="1.0"
        KeyTime="0:0:0.3">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- Colors -->
        <Color x:Key="NoColor" A="255" R="0" G="0" B="0" />
        <Color x:Key="MainBackgroundRaw" A="255" R="59" G="59" B="59" />
        <Color x:Key="BackgroundDarkerShadeRaw" A="255" R="34" G="34" B="34" />
        <Color x:Key="PrimaryColorRaw" A="255" R="55" G="90" B="127" />
        <Color x:Key="PrimaryColorDisabledRaw" A="166" R="55" G="90" B="127" />
        <Color x:Key="MainTextColorRaw" A="255" R="255" G="255" B="255" />
        <Color x:Key="MainErrorColorRaw" A="255" R="231" G="76" B="60" />
        <Color x:Key="MainSuccessColorRaw" A="255" R="47" G="194" B="55" />

        <!-- Background brushes -->
        <RadialGradientBrush x:Key="MainBackgroundGradient"
                             GradientOrigin="0.5,0.5" 
                             Center="0.5,0.5"
                             RadiusX="0.6"
                             RadiusY="0.6">
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="{StaticResource PrimaryColorDisabledRaw}" Offset="0" />
                <GradientStop Color="{StaticResource BackgroundDarkerShadeRaw}" Offset="1" />
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>

        <SolidColorBrush x:Key="MainBackgroundColor" Color="{StaticResource MainBackgroundRaw}" />
        <SolidColorBrush x:Key="BackgroundColorDarkerShade" Color="{StaticResource BackgroundDarkerShadeRaw}" />
        <SolidColorBrush x:Key="BackgroundColorDarkerShadeWithOpacity" Color="{StaticResource BackgroundDarkerShadeRaw}" Opacity="0.7"/>

        <!-- Foreground brushes -->
        <SolidColorBrush x:Key="PrimaryColor" Color="{StaticResource PrimaryColorRaw}"/>
        <SolidColorBrush x:Key="PrimaryColorDisabled" Color="{StaticResource PrimaryColorRaw}" Opacity="0.65"/>
        <SolidColorBrush x:Key="PrimaryColorHover" Color="#2B4764" />

        <SolidColorBrush x:Key="MainButtonPressedBorder" Color="#557392" Opacity="0.5" />
        <SolidColorBrush x:Key="MainSuccessColor" Color="{StaticResource MainSuccessColorRaw}" />
        <SolidColorBrush x:Key="MainSuccessColorMuted" Color="{StaticResource MainSuccessColorRaw}" Opacity="0.35"/>
        <SolidColorBrush x:Key="MainSuccessColorDisabled" Color="{StaticResource MainSuccessColorRaw}" Opacity="0.65"/>
        <SolidColorBrush x:Key="MainInfoColor" Color="#3498DB" />
        <SolidColorBrush x:Key="MainWarningColor" Color="#F39C12" />
        <SolidColorBrush x:Key="MainErrorColor" Color="{StaticResource MainErrorColorRaw}" />
        <SolidColorBrush x:Key="MainErrorColorMuted" Color="{StaticResource MainErrorColorRaw}" Opacity="0.35"/>
        <SolidColorBrush x:Key="MainErrorColorDisabled" Color="{StaticResource MainErrorColorRaw}" Opacity="0.65"/>

        <SolidColorBrush x:Key="MainTextColor" Color="{StaticResource MainTextColorRaw}" />
        <SolidColorBrush x:Key="MainTextSemiTransparent" Color="{StaticResource MainTextColorRaw}" Opacity="0.6"/>
        <SolidColorBrush x:Key="MainTextMutedColor" Color="#888888" />
        <SolidColorBrush x:Key="MainHighlightColor" Color="#B9CC98" />
        <SolidColorBrush x:Key="MainMouseOverColor" Color="#4788C8" />

        <!-- TextBlock styles-->
        <Style x:Key="TextBlockStyleBase" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource CascadiaCode}" />
        </Style>
        <Style x:Key="MainTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyleBase}">
            <Setter Property="Foreground" Value="{StaticResource MainTextColor}"/>
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Opacity" Value="0.9" />
        </Style>
        <Style x:Key="SymbolButtonStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}"/>
            <Setter Property="FontSize" Value="10" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="RenderOptions.ClearTypeHint" Value="Auto" />
            <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"  />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>

        <!-- Button styles -->
        <Style x:Key="ButtonPrimaryStyleBase" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource CascadiaCode}" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        </Style>
        <Style x:Key="ButtonPrimaryStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyleBase}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="layoutRoot"
                                CornerRadius="3"
                                BorderThickness="3"
                                BorderBrush="{StaticResource BackgroundColorDarkerShadeWithOpacity}"
                                Background="{StaticResource BackgroundColorDarkerShadeWithOpacity}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainTextMutedColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource BackgroundColorDarkerShade}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource BackgroundColorDarkerShade}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MainHighlightColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainButtonPressedBorder}"/>
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainButtonPressedBorder}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CancelButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyleBase}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="layoutRoot"
                        CornerRadius="3"
                        BorderThickness="3"
                        BorderBrush="{StaticResource MainErrorColorMuted}"
                        Background="{StaticResource MainErrorColorMuted}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColor}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainErrorColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColorDisabled}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainErrorColorDisabled}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainErrorColorMuted}"/>
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainErrorColorMuted}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SuccessButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyleBase}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource MainTextColor}" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="layoutRoot"
                                CornerRadius="3"
                                BorderThickness="3"
                                BorderBrush="{StaticResource MainSuccessColorMuted}"
                                Background="{StaticResource MainSuccessColorMuted}">
                            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColor}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MainTextMutedColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColorDisabled}" />
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColorDisabled}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                                <Setter TargetName="layoutRoot" Property="Background" Value="{StaticResource MainSuccessColorMuted}"/>
                                <Setter TargetName="layoutRoot" Property="BorderBrush" Value="{StaticResource MainSuccessColorMuted}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox -->
        <Style x:Key="MainTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource BackgroundColorDarkerShadeWithOpacity}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource MainTextColor}"/>
            <Setter Property="FontFamily" Value="{StaticResource CascadiaCode}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
