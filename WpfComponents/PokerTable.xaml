<UserControl x:Class="PokerTracker3000.WpfComponents.PokerTable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:app="clr-namespace:PokerTracker3000"
             xmlns:session="clr-namespace:PokerTracker3000.GameSession"
             xmlns:components="clr-namespace:PokerTracker3000.WpfComponents"
             xmlns:validation="clr-namespace:PokerTracker3000.WpfComponents.ValidationRules">

    <Grid DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=.}"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},
                                Path=ActualWidth,
                                Converter={StaticResource scaleNumberConverter},
                                ConverterParameter=*0.9}">

        <Image Source="{StaticResource pokerTable}"/>

        <!-- Player slots (12 players) -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTableLayout}"
                                     Value="{x:Static session:TableLayout.TwelvePlayers}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Top row-->
            <components:Player Grid.Row="0"
                               Grid.Column="3"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot1}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopLeft}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="0"
                               Grid.Column="5"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot2}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopCenter}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="0"
                               Grid.Column="7"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot3}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopRight}"
                               AlwaysShowPlayerImage="False"/>
            <!-- Right column -->
            <components:Player Grid.Row="1"
                               Grid.Column="9"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot4}"
                               Alignment="{x:Static components:Player+SpotAlignment.Right}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="3"
                               Grid.Column="10"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot5}"
                               Alignment="{x:Static components:Player+SpotAlignment.Right}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="5"
                               Grid.Column="9"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot6}"
                               Alignment="{x:Static components:Player+SpotAlignment.Right}"
                               AlwaysShowPlayerImage="False"/>

            <!-- Bottom row-->
            <components:Player Grid.Row="6"
                               Grid.Column="7"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot7}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomRight}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="6"
                               Grid.Column="5"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot8}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomCenter}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="6"
                               Grid.Column="3"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot9}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomLeft}"
                               AlwaysShowPlayerImage="False"/>

            <!-- Left column -->
            <components:Player Grid.Row="5"
                               Grid.Column="1"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot10}"
                               Alignment="{x:Static components:Player+SpotAlignment.Left}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="3"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot11}"
                               Alignment="{x:Static components:Player+SpotAlignment.Left}"
                               AlwaysShowPlayerImage="False"/>
            <components:Player Grid.Row="1"
                               Grid.Column="1"
                               Grid.ColumnSpan="2"
                               SpotData="{Binding Path=Spot12}"
                               Alignment="{x:Static components:Player+SpotAlignment.Left}"
                               AlwaysShowPlayerImage="False"/>
        </Grid>

        <!-- Player slots (10 players) -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTableLayout}"
                          Value="{x:Static session:TableLayout.TenPlayers}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            
            <!-- Top row-->
            <components:Player Grid.Row="0"
                               Grid.Column="2"
                               SpotData="{Binding Path=Spot1}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopLeft}"/>
            <components:Player Grid.Row="0"
                               Grid.Column="4"
                               SpotData="{Binding Path=Spot2}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopCenter}"
                              />
            <components:Player Grid.Row="0"
                               Grid.Column="6"
                               SpotData="{Binding Path=Spot3}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopRight}"
                              />

            <!-- Right column -->
            <components:Player Grid.Row="1"
                               Grid.Column="8"
                               SpotData="{Binding Path=Spot4}"
                               Alignment="{x:Static components:Player+SpotAlignment.Right}" />
            <components:Player Grid.Row="3"
                               Grid.Column="8"
                               SpotData="{Binding Path=Spot5}"
                               Alignment="{x:Static components:Player+SpotAlignment.Right}" />

            <!-- Bottom row-->
            <components:Player Grid.Row="4"
                               Grid.Column="6"
                               SpotData="{Binding Path=Spot6}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomRight}" />
            <components:Player Grid.Row="4"
                               Grid.Column="4"
                               SpotData="{Binding Path=Spot7}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomCenter}" />
            <components:Player Grid.Row="4"
                               Grid.Column="2"
                               SpotData="{Binding Path=Spot8}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomLeft}" />

            <!-- Left column -->
            <components:Player Grid.Row="3"
                               Grid.Column="0"
                               SpotData="{Binding Path=Spot9}"
                               Alignment="{x:Static components:Player+SpotAlignment.Left}"/>
            <components:Player Grid.Row="1"
                               Grid.Column="0"
                               SpotData="{Binding Path=Spot10}"
                               Alignment="{x:Static components:Player+SpotAlignment.Left}"/>
        </Grid>

        <!-- Player slots (8 players) -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTableLayout}"
                          Value="{x:Static session:TableLayout.EightPlayers}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <!-- Top row-->
            <components:Player Grid.Row="0"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot1}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopLeft}" />
            <components:Player Grid.Row="0"
                               Grid.Column="3"
                               SpotData="{Binding Path=Spot2}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopCenter}" />
            <components:Player Grid.Row="0"
                               Grid.Column="5"
                               SpotData="{Binding Path=Spot3}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopRight}" />

            <!-- Right column -->
            <components:Player Grid.Row="2"
                               Grid.Column="6"
                               SpotData="{Binding Path=Spot4}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomRight}" />

            <!-- Bottom row-->
            <components:Player Grid.Row="4"
                               Grid.Column="5"
                               SpotData="{Binding Path=Spot5}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomRight}" />
            <components:Player Grid.Row="4"
                               Grid.Column="3"
                               SpotData="{Binding Path=Spot6}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomCenter}"/>
            <components:Player Grid.Row="4"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot7}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomLeft}"/>

            <!-- Left column -->
            <components:Player Grid.Row="2"
                               Grid.Column="0"
                               SpotData="{Binding Path=Spot8}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomLeft}" />
        </Grid>

        <!-- Player slots (6 players) -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTableLayout}"
                          Value="{x:Static session:TableLayout.SixPlayers}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Top row-->
            <components:Player Grid.Row="0"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot1}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopLeft}" />
            <components:Player Grid.Row="0"
                               Grid.Column="3"
                               SpotData="{Binding Path=Spot2}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopCenter}" />
            <components:Player Grid.Row="0"
                               Grid.Column="5"
                               SpotData="{Binding Path=Spot3}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopRight}" />

            <!-- Bottom row-->
            <components:Player Grid.Row="2"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot4}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomLeft}" />
            <components:Player Grid.Row="2"
                               Grid.Column="3"
                               SpotData="{Binding Path=Spot5}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomCenter}" />
            <components:Player Grid.Row="2"
                               Grid.Column="5"
                               SpotData="{Binding Path=Spot6}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomRight}" />
        </Grid>

        <!-- Player slots (4 players) -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTableLayout}"
                          Value="{x:Static session:TableLayout.FourPlayers}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Top row-->
            <components:Player Grid.Row="0"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot1}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopCenter}" />
            <components:Player Grid.Row="0"
                               Grid.Column="3"
                               SpotData="{Binding Path=Spot2}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopCenter}" />

            <!-- Bottom row-->
            <components:Player Grid.Row="2"
                               Grid.Column="3"
                               SpotData="{Binding Path=Spot3}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomCenter}" />
            <components:Player Grid.Row="2"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot4}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomCenter}" />
        </Grid>

        <!-- Player slots (2 players) -->
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTableLayout}"
                          Value="{x:Static session:TableLayout.TwoPlayers}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Top row-->
            <components:Player Grid.Row="0"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot1}"
                               Alignment="{x:Static components:Player+SpotAlignment.TopCenter}" />

            <!-- Bottom row-->
            <components:Player Grid.Row="2"
                               Grid.Column="1"
                               SpotData="{Binding Path=Spot2}"
                               Alignment="{x:Static components:Player+SpotAlignment.BottomCenter}" />
        </Grid>

        <!-- Edit name box -->
        <StackPanel Orientation="Vertical"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ViewModel.SelectedSpot, Converter={StaticResource isNullConverter}}" Value="False" />
                                <Condition Binding="{Binding Path=ViewModel.FocusManager.CurrentFocusArea}" Value="{x:Static app:MainWindowFocusManager+FocusArea.EditNameBox}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <!-- Text over edit box -->
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                           Text="SET NAME FOR PLAYER "
                           FontWeight="Bold"/>
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                           Text="{Binding Path=ViewModel.SelectedSpot.SpotIndex,
                                          Converter={StaticResource scaleNumberConverter},
                                          ConverterParameter=+1}"
                           FontWeight="Bold"/>
            </StackPanel>

            <!-- Change name box -->
            <TextBox x:Name="changeNameBox"
                     Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                            Path=ActualHeight,
                            Converter={StaticResource scaleNumberConverter},
                            ConverterParameter=*0.1}"
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                            Path=ActualWidth,
                            Converter={StaticResource scaleNumberConverter},
                            ConverterParameter=*0.5}"
                     HorizontalContentAlignment="Center"
                     VerticalContentAlignment="Center"
                     FontSize="38">
                <TextBox.Text>
                    <Binding Path="ViewModel.SelectedSpot.PlayerData.Information.Name"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:TextLengthValidationRule Min="1" Max="20" FieldName="Name"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MainTextBoxStyle}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </StackPanel>

        <!-- Buy-in/Add-on box -->
        <StackPanel Orientation="Vertical"
              HorizontalAlignment="Center"
              VerticalAlignment="Center">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ViewModel.SelectedSpot, Converter={StaticResource isNullConverter}}" Value="False" />
                                <Condition Binding="{Binding Path=ViewModel.FocusManager.CurrentFocusArea}" Value="{x:Static app:MainWindowFocusManager+FocusArea.AddOnOrBuyInBox}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

             <!-- Text over box -->
            <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Center">
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                     Text="SET "
                     FontWeight="Bold" />
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Text" Value="ADD-ON" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ViewModel.SelectedSpot.IsEliminated}" Value="True">
                                    <Setter Property="Text" Value="BUY-IN" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                           Text=" AMOUNT FOR PLAYER "
                           FontWeight="Bold" />
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                     Text="{Binding Path=ViewModel.SelectedSpot.SpotIndex,
                                    Converter={StaticResource scaleNumberConverter},
                                    ConverterParameter=+1}"
                     FontWeight="Bold"/>
            </StackPanel>

             <!-- Buy-in/Add on box -->
            <Border Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                      Path=ActualHeight,
                      Converter={StaticResource scaleNumberConverter},
                      ConverterParameter=*0.1}"
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                      Path=ActualWidth,
                      Converter={StaticResource scaleNumberConverter},
                      ConverterParameter=*0.5}"
                     Background="{StaticResource BackgroundColorDarkerShadeWithOpacity}"
                     CornerRadius="5">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>

                    <!-- Amount -->
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="38">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource valueDisplayConverter}">
                                <Binding Path="ViewModel.SelectedSpot.BuyInOrAddOnAmount" />
                                <Binding Path="ViewModel.CurrencyType" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <!-- Options -->
                    <ItemsControl Grid.Column="1"
                                  ItemsSource="{Binding Path=ViewModel.AddOnOrBuyInOptions}"
                                  VerticalAlignment="Center"
                                  Margin="0,0,10,0">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="5" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <components:EditPlayerOptionBox OptionModel="{Binding Path=.}"
                                             Margin="3"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Border>
        </StackPanel>

        <components:ScrollingSelectorBox VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         NavigatorRelay="{Binding Path=ViewModel.FocusManager}"
                                         Options="{Binding Path=ViewModel.Stages}"/>
    </Grid>
</UserControl>
