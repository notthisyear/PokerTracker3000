<UserControl x:Class="PokerTracker3000.WpfComponents.PokerTable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:app="clr-namespace:PokerTracker3000"
             xmlns:session="clr-namespace:PokerTracker3000.GameSession"
             xmlns:components="clr-namespace:PokerTracker3000.WpfComponents"
             xmlns:editgameoptions="clr-namespace:PokerTracker3000.WpfComponents.EditGameOptions"
             xmlns:playerlayout="clr-namespace:PokerTracker3000.WpfComponents.PlayerLayout"
             xmlns:validation="clr-namespace:PokerTracker3000.WpfComponents.ValidationRules">

    <Grid DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=.}"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch">

        <Grid.Resources>
            <editgameoptions:EditGameStagesControl x:Key="editGameStages"
                                                   SessionManager="{Binding Path=ViewModel}"/>
            <editgameoptions:ChangeAddOnAmountControl x:Key="changeAddOnAmount"
                                                      SessionManager="{Binding Path=ViewModel}"/>
            <editgameoptions:ChangeBuyInAmountControl x:Key="changeBuyInAmount"
                                                      SessionManager="{Binding Path=ViewModel}"/>
            <editgameoptions:ChangeStageLengthControl x:Key="changeStageLength"
                                                     SessionManager="{Binding Path=ViewModel}"/>
            <editgameoptions:ChangeCurrencyControl x:Key="changeCurrency"
                                                   SessionManager="{Binding Path=ViewModel}"
                                                   SelectedCurrency="{Binding Path=ViewModel.GameSettings.CurrencyType}"/>
            <Storyboard x:Key="animateCoffeeMug"
                        PresentationOptions:Freeze="True"
                        RepeatBehavior="Forever"
                        AutoReverse="True">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                    <LinearDoubleKeyFrame KeyTime="00:00:0.0" Value="0.2" />
                    <LinearDoubleKeyFrame KeyTime="00:00:5.0" Value="0.7" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame Value="0.95"
                                          KeyTime="0:0:0.0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuadraticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame Value="1.05"
                                          KeyTime="0:0:5.0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuadraticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame Value="0.95"
                               KeyTime="0:0:0.0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuadraticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame Value="1.05"
                                          KeyTime="0:0:5.0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuadraticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="104*"/>
            <ColumnDefinition Width="83*"/>
        </Grid.ColumnDefinitions>

        <!-- Poker table image -->
        <Image Source="{StaticResource pokerTable}"
                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},
                  Path=ActualWidth,
                  Converter={StaticResource scaleNumberConverter},
                  ConverterParameter=*0.85}" Grid.ColumnSpan="2" />

        <!-- Players -->
        <playerlayout:PlayerLayoutControl ViewModel="{Binding Path=ViewModel}"
                                          Grid.ColumnSpan="2" />

        <!-- Edit name box -->
        <StackPanel Orientation="Vertical"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.ColumnSpan="2">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ViewModel.SelectedSpot, Converter={StaticResource isNullConverter}}" Value="False" />
                                <Condition Binding="{Binding Path=ViewModel.FocusManager.CurrentFocusArea}" Value="{x:Static app:MainWindowFocusManager+FocusArea.EditNameBox}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <!-- Text over edit box -->
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                           Text="SET NAME FOR PLAYER IN SPOT "
                           FontWeight="Bold"/>
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                           Text="{Binding Path=ViewModel.SelectedSpot.SpotIndex,
                                          Converter={StaticResource scaleNumberConverter},
                                          ConverterParameter=+1}"
                           FontWeight="Bold"/>
            </StackPanel>

            <!-- Change name box -->
            <TextBox x:Name="changeNameBox"
                     Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                            Path=ActualHeight,
                            Converter={StaticResource scaleNumberConverter},
                            ConverterParameter=*0.1}"
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                            Path=ActualWidth,
                            Converter={StaticResource scaleNumberConverter},
                            ConverterParameter=*0.5}"
                     HorizontalContentAlignment="Center"
                     VerticalContentAlignment="Center"
                     FontSize="38">
                <TextBox.Text>
                    <Binding Path="ViewModel.SelectedSpot.PlayerData.Name"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:TextLengthValidationRule Min="1" Max="20" FieldName="Name"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MainTextBoxStyle}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </StackPanel>

        <!-- Buy-in/Add-on box -->
        <StackPanel Orientation="Vertical"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.ColumnSpan="2">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Opacity" Value="0" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ViewModel.SelectedSpot, Converter={StaticResource isNullConverter}}" Value="False" />
                                <Condition Binding="{Binding Path=ViewModel.FocusManager.CurrentFocusArea}" Value="{x:Static app:MainWindowFocusManager+FocusArea.AddOnOrBuyInBox}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <!-- Text over box -->
            <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Center">
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                     Text="SET "
                     FontWeight="Bold" />
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Text" Value="ADD-ON" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ViewModel.SelectedSpot.IsEliminated}" Value="True">
                                    <Setter Property="Text" Value="BUY-IN" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                           Text=" AMOUNT FOR "
                           FontWeight="Bold" />
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                     Text="{Binding Path=ViewModel.SelectedSpot.PlayerData.Name, StringFormat=\'{0}\'}"
                     FontWeight="Bold"/>
            </StackPanel>

            <!-- Actual box -->
            <Border Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                      Path=ActualHeight,
                      Converter={StaticResource scaleNumberConverter},
                      ConverterParameter=*0.1}"
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}},
                      Path=ActualWidth,
                      Converter={StaticResource scaleNumberConverter},
                      ConverterParameter=*0.5}"
                     Background="{StaticResource BackgroundColorDarkerShadeWithOpacity}"
                     CornerRadius="5">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>

                    <!-- Amount -->
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="38">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource valueDisplayConverter}">
                                <Binding Path="ViewModel.SelectedSpot.BuyInOrAddOnAmount" />
                                <Binding Path="ViewModel.GameSettings.CurrencyType" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <!-- Options -->
                    <ItemsControl Grid.Column="1"
                                  ItemsSource="{Binding Path=ViewModel.AddOnOrBuyInOptions}"
                                  VerticalAlignment="Center"
                                  Margin="0,0,10,0">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="5" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <components:EditPlayerOptionBox OptionModel="{Binding Path=.}"
                                             Margin="3"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Border>
        </StackPanel>

        <!-- Game edit options -->
        <ContentControl VerticalAlignment="Center" Grid.ColumnSpan="2">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Opacity" Value="0" />
                    <Setter Property="Content" Value="{x:Null}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ViewModel.CurrentGameEditOption}"
                                     Value="{x:Static session:SideMenuViewModel+GameEditOption.GameStages}">
                            <DataTrigger.Setters>
                                <Setter Property="Content" Value="{StaticResource editGameStages}" />
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=ViewModel.CurrentGameEditOption}"
                                     Value="{x:Static session:SideMenuViewModel+GameEditOption.ChangeDefaultAddOnAmount}">
                            <DataTrigger.Setters>
                                <Setter Property="Content" Value="{StaticResource changeAddOnAmount}" />
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=ViewModel.CurrentGameEditOption}"
                                     Value="{x:Static session:SideMenuViewModel+GameEditOption.ChangeDefaultBuyInAmount}">
                            <DataTrigger.Setters>
                                <Setter Property="Content" Value="{StaticResource changeBuyInAmount}" />
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=ViewModel.CurrentGameEditOption}"
                                     Value="{x:Static session:SideMenuViewModel+GameEditOption.ChangeDefaultStageLength}">
                            <DataTrigger.Setters>
                                <Setter Property="Content" Value="{StaticResource changeStageLength}" />
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=ViewModel.CurrentGameEditOption}"
                                    Value="{x:Static session:SideMenuViewModel+GameEditOption.ChangeCurrency}">
                            <DataTrigger.Setters>
                                <Setter Property="Content" Value="{StaticResource changeCurrency}" />
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <!-- FIXME: Currently, the fade-out animation won't work properly as
                                    the content is cleared as soon as the enum value changes.
                                    Maybe a custom attached property could solve this...? -->
                        <DataTrigger Binding="{Binding Path=ViewModel.CurrentGameEditOption}"
                                     Value="{x:Static session:SideMenuViewModel+GameEditOption.None}">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <!-- Break stage animation -->
        <Image Source="{StaticResource coffeeMug}"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               Width="300" Grid.ColumnSpan="2" Margin="-57,0,0,0">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Opacity" Value="0.3" />
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ViewModel.StageManager.CurrentStage.IsPause}" Value="True" />
                                <Condition Binding="{Binding Path=ViewModel.Clock.IsRunning}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="mugAnimation"
                                                 Storyboard="{StaticResource animateCoffeeMug}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="mugAnimation" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
    </Grid>
</UserControl>
